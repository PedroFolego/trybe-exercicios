{"ast":null,"code":"var _jsxFileName = \"/media/pedro/Arquivos Ubuntu/Trybe/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/exercs12.1/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n      this.setState({\n        characters: data.results\n      });\n    });\n  }\n\n  render() {\n    const {\n      characters\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ricky and Morty Characters:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: characters.map(_ref => {\n          let {\n            name,\n            image\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/pedro/Arquivos Ubuntu/Trybe/trybe-exercicios/front-end/bloco-12-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/exercs12.1/src/App.js"],"names":["React","Component","App","constructor","props","state","characters","componentDidMount","fetch","then","response","json","data","setState","results","render","map","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AAACP,QAAAA,UAAU,EAAEM,IAAI,CAACE;AAAlB,OAAd;AACD,KAJD;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACCC,UAAU,CAACU,GAAX,CAAe,QAAqB;AAAA,cAApB;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAoB;AACnC,8BACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA,wBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,GAAG,EAAEC,KAAV;AAAiB,cAAA,GAAG,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAgCA,IAAhC;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD,SAPA;AADD;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADF;AAmBD;;AArCyB;;AAwC5B,eAAef,GAAf","sourcesContent":["import React, { Component }from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        characters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://rickandmortyapi.com/api/character')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({characters: data.results})\n    })\n  }\n\n  render() {\n    const { characters } = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <h1>\n            Ricky and Morty Characters:\n          </h1>\n        </div>\n        <div className=\"body\">\n        {characters.map(({ name, image }) => {\n          return (\n            <div className=\"container\" key={name}>\n              <h3>{name}</h3>\n              <img src={image} alt={name}/>\n            </div>\n          )\n        })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}